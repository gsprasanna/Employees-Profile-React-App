{"version":3,"sources":["assets/images/loading.gif","Constants/ServerUrls.js","Services/fetchData.js","Components/LoadingIndicator.js","routes/routes.js","Components/UserAccountList.js","Pages/LoginPage/Login.jsx","Components/ProfileSideBar.js","Components/Post.js","Components/GeoMap.js","Components/ProfileContent.js","Pages/ProfileDetails/ProfileDetails.js","Pages/ProfileDetails/PostPage.js","Components/Gallery.js","Pages/ProfileDetails/GalleryPage.js","Components/Todo.js","Pages/ProfileDetails/TodoPage.js","Components/Photos.js","Pages/ProfileDetails/PhotosPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GET_USERS_API","GET_POSTS_API","GET_COMMENTS_API","GET_PHOTOS_API","GET_ALBUMS_API","GET_ACTIVITIES_API","GET_TODO_API","fetchData","route","requestUrl","Promise","resolve","reject","fetch","then","response","json","data","catch","error","LoadingIndicator","src","require","alt","React","Component","routes","login","profile","posts","gallery","todo","albums","signOut","UserAccountList","name","id","userIndex","storeUserName","userAllDetails","className","Image","profilepicture","roundedCircle","to","replace","key","onClick","e","console","Login","state","this","props","usersList","map","user","ProfileSideBar","fullName","profilePicture","Post","userEmail","userPost","earlierActivity","yesterdayActivity","todayActivity","postComments","useState","show","setShow","Row","Modal","onHide","animation","Body","style","width","height","Footer","Button","variant","length","post","Index","Card","color","fontSize","time","title","image","body","icon","faCommentAlt","faShare","comments","postId","commentsBody","profilePic","commentsTime","cursor","textAlign","activity","slice","extractDay","Date","toDateString","GeoMap","google","zoom","initialCenter","lat","lng","ProfileContent","GoogleApiWrapper","apiKey","process","userName","mailId","phone","website","companyName","catchPhrase","bs","street","suite","city","zipcode","geoDetails","ProfileDetails","match","params","setState","userDetails","userProfileUrl","Object","keys","constructor","username","email","company","address","geo","PostPage","userActivity","Gallery","userAlbums","userPhotos","storeAlbumName","CardDeck","album","filteredPhotos","filter","photo","albumId","index","Img","url","Title","GalleryPage","Todo","completedTodo","yetToCompleteTodo","type","fontWeight","disabled","faCheckCircle","defaultChecked","TodoPage","userTodo","Photos","userAlbumPhotosById","selectedAlbumTitle","PhotosPage","selectedAlbumId","loadUserPhotos","filteredUserPhotos","parseInt","App","userProfileName","sortedActivity","loadUserAccountList","a","async","getUsers","users","loadUserPost","getPost","userPosts","filteredPost","userId","loadPostComments","getComments","filteredComments","comment","loadAlbums","getAlbums","getPhotos","loadActivities","getActivities","recentActivity","filteredActivity","formatActivity","sort","first","second","c","getTime","activityDate","toLocaleDateString","currentDate","diffTime","Math","abs","ceil","loadTodo","getTodo","filteredTodo","completed","push","details","localStorage","setItem","JSON","stringify","value","history","location","pathname","parse","getItem","exact","path","render","withRouter","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e79d8278.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.81c29bc5.gif\";","/* \n    Below are the api end points and resource details.\n    These are constants and configurable.\n */\n\n// API end point\nexport const PRIMARY_SERVER = \"https://panorbit.in/api\";\n\n// resource used to get list of users\nexport const GET_USERS_API = \"/users.json\";\n\n// resource used to get list of posts\nexport const GET_POSTS_API = \"/posts.json\";\n\n// resource used to get list of comments\nexport const GET_COMMENTS_API = \"/comments.json\";\n\n// resource used to get list of photos\nexport const GET_PHOTOS_API = \"/photos.json\";\n\n// resource used to get list of albums\nexport const GET_ALBUMS_API = \"/albums.json\";\n\n// resource used to get list of activity\nexport const GET_ACTIVITIES_API = \"/activity.json\";\n\n// resource used to get list of todo\nexport const GET_TODO_API = \"/todo.json\";\n","import { PRIMARY_SERVER } from \"../Constants/ServerUrls\";\n\n/* \n  function used to fetch the resources from the server\n*/\nconst fetchData = route => {\n  // framing the request url\n  const requestUrl = PRIMARY_SERVER + route;\n\n  return new Promise((resolve, reject) => {\n    fetch(requestUrl)\n      .then(response => response.json())\n      .then(data => {\n        resolve(data); // resovlve the promise\n      })\n      .catch(error => {\n        reject(error); // reject the promise\n      });\n  });\n};\n\nexport default fetchData;\n","import React from \"react\";\n\nclass LoadingIndicator extends React.Component {\n  render() {\n    return (\n      <div>\n        <img src={require(\"../assets/images/loading.gif\")} alt={\"loading\"} />\n      </div>\n    );\n  }\n}\n\nexport default LoadingIndicator;\n","/* \n  Defined routes - used to route between the pages & component of the application\n*/\nconst routes = {\n  login: \"/login\",\n  profile: \"/profile/:user\",\n  posts: \"/post\",\n  gallery: \"/gallery\",\n  todo: \"/todo\",\n  albums: \"/album/:albumId\",\n  signOut: \"/signout\"\n};\n\nexport default routes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../routes/routes\";\nimport { Image } from \"react-bootstrap\";\n\nconst UserAccountList = ({\n  /* destructuring the props */\n  name,\n  id,\n  userIndex,\n  storeUserName,\n  userAllDetails\n}) => {\n  try {\n    /* return the user list  */\n    return (\n      <>\n        <div className=\"profile-icon  border-bottom\">\n          <Image\n            src={userAllDetails.profilepicture}\n            alt=\"loading\"\n            className=\"profile-img\"\n            roundedCircle\n          />\n\n          <NavLink\n            className=\"user-account-list\"\n            to={routes.profile.replace(\":user\", name)}\n            id={id}\n            key={userIndex}\n            onClick={() => storeUserName(userAllDetails)}\n          >\n            {name}\n          </NavLink>\n        </div>\n      </>\n    );\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nUserAccountList.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default UserAccountList;\n","/* Importing the required packages and components */\nimport React, { Component } from \"react\";\nimport LoadingIndicator from \"../../Components/LoadingIndicator\";\nimport UserAccountList from \"../../Components/UserAccountList\";\n\nclass Login extends Component {\n  state = {};\n  render() {\n    /* de structuring the props */\n    const { usersList, storeUserName } = this.props;\n    return (\n      <div className=\"App-header\">\n        <div className=\"m-auto modal-center\">\n          <div className=\"account-title\">Select an account</div>\n          <div className=\"user-list\">\n            {usersList ? (\n              usersList.map((user, userIndex) => {\n                return (\n                  <UserAccountList\n                    name={user.name}\n                    id={user.id}\n                    key={userIndex}\n                    storeUserName={storeUserName}\n                    userAllDetails={user}\n                  />\n                );\n              })\n            ) : (\n              <LoadingIndicator />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../routes/routes\";\nimport { Row, Col, Image } from \"react-bootstrap\";\n\nconst ProfileSideBar = ({\n  /* destructuring the props */\n  fullName,\n  profilePicture\n}) => {\n  try {\n    /* return the side bar component */\n    return (\n      <div className=\"col-md-2 sidebar\">\n        <NavLink\n          to={routes.profile.replace(\":user\", fullName)}\n          className=\"border-bottom\"\n        >\n          Profile\n        </NavLink>\n        <NavLink to={routes.posts} className=\"border-bottom\">\n          Posts\n        </NavLink>\n        <NavLink to={routes.gallery} className=\"border-bottom\">\n          Gallery\n        </NavLink>\n        <NavLink to={routes.todo} className=\"border-bottom\">\n          TODO\n        </NavLink>\n      </div>\n    );\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nProfileSideBar.propTypes = {\n  fullName: PropTypes.string.isRequired\n};\n\nexport default ProfileSideBar;\n\n{\n  /* <Col md={10} className=\"topbar\">\n          <div className=\"sidebar-title\">Profile</div>\n          <div className=\"profile-icon\">\n            <Image\n              src={profilePicture}\n              alt=\"loading\"\n              className=\"profile-img\"\n              roundedCircle\n            />\n            <label>{userName}</label>\n          </div>\n        </Col> */\n}\n","import React, { useState } from \"react\";\nimport { faShare, faCommentAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Card } from \"react-bootstrap\";\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport { Row, Image, Modal, Button } from \"react-bootstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport routes from \"../routes/routes\";\n\nconst Post = ({\n  /* destructuring the props */\n  fullName,\n  userEmail,\n  profilePicture,\n  userPost,\n  earlierActivity,\n  yesterdayActivity,\n  todayActivity,\n  postComments\n}) => {\n  debugger;\n  /* useState used to manage the state in functional components */\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  /* return the post details and sidebar components */\n  return (\n    <div className=\"col-md-10\">\n      <Row className=\"topbar container\">\n        <div className=\"sidebar-title\">Posts</div>\n        <div className=\"profile-icon\">\n          <Link className=\"user-account-list\" onClick={handleShow}>\n            <Image\n              src={profilePicture}\n              alt=\"loading\"\n              className=\"profile-img\"\n              roundedCircle\n            />\n            <label>{fullName}</label>\n          </Link>\n          <Modal show={show} onHide={handleClose} animation={false}>\n            <Modal.Body>\n              <div>\n                <Image\n                  src={profilePicture}\n                  style={{ width: \"50%\", height: \"25%\" }}\n                  alt=\"loading\"\n                  className=\"\"\n                  roundedCircle\n                />\n              </div>\n              <label>{fullName}</label>\n              <br />\n              <label className=\"tbl-key-color\">{userEmail}</label>\n              <hr />\n            </Modal.Body>\n            <Modal.Footer>\n              <NavLink to={routes.login} className=\"m-auto\">\n                <Button variant=\"danger\">Sign Out</Button>\n              </NavLink>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </Row>\n      <hr />\n      <Row className=\"main-content container\">\n        <div className=\"col-md-7\">\n          {userPost.length ? (\n            userPost.map((post, Index) => {\n              return (\n                <Card className=\"user-post-card\">\n                  <div className=\"\">\n                    <Image\n                      src={profilePicture}\n                      alt=\"loading\"\n                      className=\"profile-img\"\n                      roundedCircle\n                    />\n                    <span>{fullName}</span>\n                  </div>\n                  <div\n                    className=\"ml-5\"\n                    style={{ color: \"grey\", fontSize: \"small\" }}\n                  >\n                    {post.time}\n                  </div>\n                  <div className=\"post-title\">{post.title}</div>\n                  <img className=\"post-img\" src={post.image} alt=\"loading\" />\n                  <div className=\"post-body\">{post.body}</div>\n                  <div className=\"post-comment-icon\">\n                    <a>\n                      <FontAwesomeIcon\n                        icon={faCommentAlt}\n                        style={{ color: \"lightgrey\" }}\n                      />\n                      <span style={{ color: \"grey\" }}>Comments </span>\n                    </a>\n                    <a>\n                      <FontAwesomeIcon\n                        icon={faShare}\n                        style={{ color: \"lightgrey\" }}\n                      />\n                      <span style={{ color: \"grey\" }}>Share</span>\n                    </a>\n                  </div>\n\n                  {postComments.length ? (\n                    postComments.map(comments => {\n                      if (comments.postId === post.id) {\n                        const commentsBody = comments.body;\n                        const profilePic = comments.profilePicture;\n                        const commentsTime = comments.time;\n                        debugger;\n                        return (\n                          <>\n                            <div className=\"mt-3 pl-3\">\n                              <Image\n                                src={profilePic}\n                                alt=\"loading\"\n                                className=\"profile-img\"\n                                roundedCircle\n                              />\n                              <span>{fullName}</span>\n                              <span\n                                className=\"ml-2 color-text-grey\"\n                                style={{ fontSize: \"small\" }}\n                              >\n                                {commentsTime}\n                              </span>\n                              <div className=\"pl-5 color-text-grey\">\n                                {userEmail}\n                              </div>\n                              <div className=\"mt-2 pl-4\">{commentsBody}</div>\n                              <div\n                                className=\"pl-4 color-text-grey\"\n                                style={{ cursor: \"pointer\" }}\n                              >\n                                Reply\n                              </div>\n                            </div>\n                          </>\n                        );\n                      }\n                    })\n                  ) : (\n                    <> </>\n                  )}\n                </Card>\n              );\n            })\n          ) : (\n            <LoadingIndicator />\n          )}\n        </div>\n        <div className=\"col-md-5 card-activity\">\n          <div style={{ textAlign: \"center\" }}> Activities</div>\n          {todayActivity.length ? (\n            <div className=\"m-auto\">Recent Activities</div>\n          ) : (\n            <> </>\n          )}\n          {todayActivity.length ? (\n            todayActivity.map(activity => {\n              return (\n                <>\n                  <div className=\"mt-3 mb-3\">\n                    <Image\n                      src={profilePicture}\n                      alt=\"loading\"\n                      className=\"profile-img\"\n                      roundedCircle\n                    />{\" \"}\n                    <span>{fullName} </span>\n                    <span className=\"color-text-grey\" style={{ width: \"5vh\" }}>\n                      {activity.activity}{\" \"}\n                    </span>\n                    <span className=\"color-text-grey\">\n                      {activity.time.slice(10, 18)}\n                    </span>\n                  </div>\n                </>\n              );\n            })\n          ) : (\n            <></>\n          )}\n\n          {yesterdayActivity.length ? (\n            <div className=\"activity-title-flex\">\n              <hr className=\"hr-line-activity center-element\" />\n              <div className=\"center-element color-text-grey\">Yesterday</div>\n              <hr className=\"hr-line-activity center-element\" />\n            </div>\n          ) : (\n            <> </>\n          )}\n          {yesterdayActivity.length ? (\n            yesterdayActivity.map(activity => {\n              return (\n                <>\n                  <div className=\"mt-3 mb-3\">\n                    <Image\n                      src={profilePicture}\n                      alt=\"loading\"\n                      className=\"profile-img\"\n                      roundedCircle\n                    />{\" \"}\n                    <span>{fullName} </span>\n                    <span className=\"color-text-grey\">\n                      {activity.time.slice(10, 18)}\n                    </span>\n                  </div>\n                </>\n              );\n            })\n          ) : (\n            <></>\n          )}\n\n          <div className=\"activity-title-flex\">\n            <hr className=\"hr-line-activity center-element\" />\n            <div className=\"center-element color-text-grey\">\n              Earlier Activities{\" \"}\n            </div>\n            <hr className=\"hr-line-activity center-element\" />\n          </div>\n          {earlierActivity.length ? (\n            earlierActivity.map(activity => {\n              let extractDay = new Date(activity.time);\n              return (\n                <>\n                  <div className=\"mt-3 mb-3\">\n                    <Image\n                      src={profilePicture}\n                      alt=\"loading\"\n                      className=\"profile-img\"\n                      roundedCircle\n                    />{\" \"}\n                    <span>{fullName} </span>\n                    <span className=\"color-text-grey\" style={{ width: \"5vh\" }}>\n                      {activity.activity}{\" \"}\n                    </span>\n                    <span className=\"color-text-grey ml-3\">\n                      {extractDay.toDateString()}\n                    </span>\n                    <span className=\"color-text-grey\">\n                      {activity.time.slice(10, 18)}\n                    </span>\n                  </div>\n                </>\n              );\n            })\n          ) : (\n            <div>**** No activities ****</div>\n          )}\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\n\nexport class GeoMap extends Component {\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={10}\n        initialCenter={{\n          lat: -1.2884,\n          lng: 36.8233\n        }}\n      />\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.apiKey\n})(GeoMap);\n","import React, { useState } from \"react\";\nimport { Row, Image, Modal, ModalBody, Button } from \"react-bootstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\nimport { GeoMap } from \"./GeoMap\";\nimport routes from \"../routes/routes\";\n\nconst ProfileContent = ({\n  /* destructuring the props */\n  fullName,\n  userName,\n  mailId,\n  profilePicture,\n  phone,\n  website,\n  companyName,\n  catchPhrase,\n  bs,\n  street,\n  suite,\n  city,\n  zipcode,\n  geoDetails\n}) => {\n  /* return the profile page details and sidebar components */\n  /* useState used to manage the state in functional components */\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <div className=\"col-md-10\">\n      <Row className=\"topbar container\">\n        <div className=\"sidebar-title\">Profile</div>\n        <div className=\"profile-icon\">\n          <Link className=\"user-account-list\" onClick={handleShow}>\n            <Image\n              src={profilePicture}\n              alt=\"loading\"\n              className=\"profile-img\"\n              roundedCircle\n            />\n            <label className=\"user-profile-name\">{fullName}</label>\n          </Link>\n          <Modal show={show} onHide={handleClose} animation={false}>\n            <Modal.Body>\n              <div>\n                <Image\n                  src={profilePicture}\n                  style={{ width: \"50%\", height: \"25%\" }}\n                  alt=\"loading\"\n                  className=\"\"\n                  roundedCircle\n                />\n              </div>\n              <label>{fullName}</label>\n              <br />\n              <label className=\"tbl-key-color\">{mailId}</label>\n              <hr />\n            </Modal.Body>\n            <Modal.Footer>\n              <NavLink to={routes.login} className=\"m-auto\">\n                <Button variant=\"danger\">Sign Out</Button>\n              </NavLink>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </Row>\n      <hr />\n      <Row className=\"main-content containter\">\n        <div className=\"col-md-5 border-right App\">\n          <div>\n            <Image\n              src={profilePicture}\n              style={{ width: \"50%\", height: \"25%\" }}\n              alt=\"loading\"\n              className=\"\"\n              roundedCircle\n            />\n            <h4>{fullName}</h4>\n          </div>\n          <table className=\"ml-5\">\n            <tr>\n              <td className=\"tbl-key-color\">Username </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{userName}</td>\n            </tr>\n            <tr>\n              <td className=\"tbl-key-color\">e-mail </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{mailId}</td>\n            </tr>\n            <tr>\n              <td className=\"tbl-key-color\">Phone </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{phone}</td>\n            </tr>\n            <tr>\n              <td className=\"tbl-key-color\">website </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{website}</td>\n            </tr>\n          </table>\n\n          <hr></hr>\n          <div className=\"tbl-key-color\">Company</div>\n          <table className=\"ml-5\">\n            <tr>\n              <td className=\"tbl-key-color\">Name </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{companyName}</td>\n            </tr>\n            <tr>\n              <td className=\"tbl-key-color\">catchPhrase </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{catchPhrase}</td>\n            </tr>\n            <tr>\n              <td className=\"tbl-key-color\">bs </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{bs}</td>\n            </tr>\n          </table>\n        </div>\n        <div className=\"col-md-7\">\n          Address:\n          <table className=\"ml-3\">\n            <tr>\n              <td className=\"tbl-key-color\">Street </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{street}</td>\n            </tr>\n            <tr>\n              <td className=\"tbl-key-color\">Suite </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{suite}</td>\n            </tr>\n            <tr>\n              <td className=\"tbl-key-color\">City </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{city}</td>\n            </tr>\n            <tr>\n              <td className=\"tbl-key-color\">Zipcode </td>\n              <td>:</td>\n              <td className=\"tbl-value-color\">{zipcode}</td>\n            </tr>\n          </table>\n          <GeoMap />\n        </div>\n      </Row>\n    </div>\n  );\n};\n\n// export default GoogleApiWrapper({\n//   apiKey: \"AIzaSyDb2W29PjAOMBmPoYm1rrpX2wxKUZx664Q\"\n// })(ProfileContent);\nexport default ProfileContent;\n","/* Importing the required packages and components */\nimport React, { Component } from \"react\";\nimport ProfileSideBar from \"../../Components/ProfileSideBar\";\nimport routes from \"../../routes/routes\";\nimport { Route } from \"react-router-dom\";\nimport Post from \"../../Components/Post\";\nimport ProfileContent from \"../../Components/ProfileContent\";\nimport LoadingIndicator from \"../../Components/LoadingIndicator\";\n\nclass ProfileDetails extends Component {\n  state = {\n    fullName: \"\"\n  };\n  componentDidMount() {\n    const { match = {} } = this.props;\n    const { params = {} } = match;\n    const { user: fullName = \"\" } = params;\n    debugger;\n    this.setState({ fullName });\n  }\n  render() {\n    debugger;\n    /* destructuring the state and props */\n    const { fullName } = this.state;\n    const { userDetails, userProfileUrl } = this.props;\n    return (\n      <div className=\"row\">\n        {Object.keys(userDetails).length === 0 &&\n        userDetails.constructor === Object ? (\n          <LoadingIndicator />\n        ) : (\n          <>\n            <ProfileSideBar fullName={userDetails.name} />\n            <ProfileContent\n              fullName={userDetails.name}\n              userName={userDetails.username}\n              mailId={userDetails.email}\n              profilePicture={userDetails.profilepicture}\n              phone={userDetails.phone}\n              website={userDetails.website}\n              companyName={userDetails.company.name}\n              catchPhrase={userDetails.company.catchPhrase}\n              bs={userDetails.company.bs}\n              street={userDetails.address.street}\n              suite={userDetails.address.suite}\n              city={userDetails.address.city}\n              zipcode={userDetails.address.zipcode}\n              geoDetails={userDetails.address.geo}\n            />{\" \"}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ProfileDetails;\n","/* Importing the required packages and components */\nimport React, { Component } from \"react\";\nimport ProfileSideBar from \"../../Components/ProfileSideBar\";\nimport Post from \"../../Components/Post\";\nimport LoadingIndicator from \"../../Components/LoadingIndicator\";\n\nclass PostPage extends Component {\n  state = {};\n  componentDidMount() {}\n  render() {\n    /* de structuring the props */\n    const {\n      userDetails,\n      userPost,\n      userActivity,\n      todayActivity,\n      yesterdayActivity,\n      earlierActivity,\n      postComments,\n      userProfileUrl\n    } = this.props;\n    return (\n      <div className=\"row\">\n        {Object.keys(userDetails).length === 0 &&\n        userDetails.constructor === Object ? (\n          <LoadingIndicator />\n        ) : (\n          <>\n            <ProfileSideBar fullName={userDetails.name} />\n            <Post\n              fullName={userDetails.name}\n              profilePicture={userDetails.profilepicture}\n              userEmail={userDetails.email}\n              userPost={userPost}\n              userActivity={userActivity}\n              todayActivity={todayActivity}\n              yesterdayActivity={yesterdayActivity}\n              earlierActivity={earlierActivity}\n              postComments={postComments}\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PostPage;\n","import React, { useState } from \"react\";\nimport { Card, Row, Image, CardDeck, Modal, Button } from \"react-bootstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport routes from \"../routes/routes\";\nimport LoadingIndicator from \"./LoadingIndicator\";\n\nconst Gallery = ({\n  userAlbums,\n  profilePicture,\n  fullName,\n  userPhotos,\n  storeAlbumName,\n  userEmail\n}) => {\n  debugger;\n  /* useState used to manage the state in functional components */\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <div className=\"col-md-10\">\n      <Row className=\"topbar container\">\n        <div className=\"sidebar-title\">Gallery</div>\n        <div className=\"profile-icon\">\n          <Link className=\"user-account-list\" onClick={handleShow}>\n            <Image\n              src={profilePicture}\n              alt=\"loading\"\n              className=\"profile-img\"\n              roundedCircle\n            />\n            <label>{fullName}</label>\n          </Link>\n          <Modal show={show} onHide={handleClose} animation={false}>\n            <Modal.Body>\n              <div>\n                <Image\n                  src={profilePicture}\n                  style={{ width: \"50%\", height: \"25%\" }}\n                  alt=\"loading\"\n                  className=\"\"\n                  roundedCircle\n                />\n              </div>\n              <label>{fullName}</label>\n              <br />\n              <label className=\"tbl-key-color\">{userEmail}</label>\n              <hr />\n            </Modal.Body>\n            <Modal.Footer>\n              <NavLink to={routes.login} className=\"m-auto\">\n                <Button variant=\"danger\">Sign Out</Button>\n              </NavLink>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </Row>\n      <hr />\n      <label>\n        <NavLink to={routes.gallery} className=\"album-header\">\n          Albums\n        </NavLink>\n      </label>\n      <Row className=\"main-content container\">\n        <div className=\"col-md-12\">\n          <CardDeck className=\"ml-3\">\n            {userAlbums.length ? (\n              userAlbums.map(album => {\n                const filteredPhotos = userPhotos.filter(photo => {\n                  return photo.albumId === album.id;\n                });\n                debugger;\n                if (filteredPhotos.length) {\n                  return (\n                    <NavLink\n                      className=\"album-nav\"\n                      to={routes.albums.replace(\":albumId\", album.id)}\n                      onClick={() => storeAlbumName(album.title)}\n                    >\n                      <Card className=\"mb-3 album-align\">\n                        <div className=\"thumbnail-align\">\n                          {filteredPhotos.map((photo, index) => {\n                            debugger;\n                            if (index === 0) {\n                              return (\n                                <Card.Img\n                                  src={photo.url}\n                                  className=\"gallery-thumbnail-icon thumbnail-angle1\"\n                                ></Card.Img>\n                              );\n                            } else if (index === 1) {\n                              return (\n                                <Card.Img\n                                  src={photo.url}\n                                  className=\"gallery-thumbnail-icon thumbnail-angle2\"\n                                ></Card.Img>\n                              );\n                            } else if (index === 2) {\n                              return (\n                                <Card.Img\n                                  src={photo.url}\n                                  className=\"gallery-thumbnail-icon thumbnail-angle3\"\n                                ></Card.Img>\n                              );\n                            } else if (index === 3) {\n                              return (\n                                <Card.Img\n                                  src={photo.url}\n                                  className=\"gallery-thumbnail-icon thumbnail-angle4\"\n                                ></Card.Img>\n                              );\n                            } else {\n                              return;\n                            }\n                          })}\n                        </div>\n                        <Card.Body className=\"album-title\">\n                          <Card.Title className=\"mb-0\" id={album.id}>\n                            {album.title}\n                          </Card.Title>\n                        </Card.Body>\n                      </Card>\n                    </NavLink>\n                  );\n                }\n              })\n            ) : (\n              <LoadingIndicator />\n            )}\n          </CardDeck>\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default Gallery;\n","/* Importing the required packages and components */\nimport React, { Component } from \"react\";\nimport ProfileSideBar from \"../../Components/ProfileSideBar\";\nimport Gallery from \"../../Components/Gallery\";\nimport LoadingIndicator from \"../../Components/LoadingIndicator\";\n\nclass GalleryPage extends Component {\n  render() {\n    /* destructuring the props */\n    const { userDetails, userAlbums, userPhotos, storeAlbumName } = this.props;\n    return (\n      <div className=\"row\">\n        <ProfileSideBar fullName={userDetails.name} />\n\n        <Gallery\n          fullName={userDetails.name}\n          profilePicture={userDetails.profilepicture}\n          userAlbums={userAlbums}\n          userPhotos={userPhotos}\n          storeAlbumName={storeAlbumName}\n          userEmail={userDetails.email}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GalleryPage;\n","import React, { useState } from \"react\";\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport { Row, Image, Modal, ModalBody, Button } from \"react-bootstrap\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport routes from \"../routes/routes\";\n\nconst Todo = ({\n  fullName,\n  profilePicture,\n  userDetails,\n  completedTodo,\n  yetToCompleteTodo\n}) => {\n  /* useState used to manage the state in functional components */\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <div className=\"col-md-10\">\n        <Row className=\"topbar container\">\n          <div className=\"sidebar-title\">ToDo</div>\n          <div className=\"profile-icon\">\n            <Link className=\"user-account-list\" onClick={handleShow}>\n              <Image\n                src={profilePicture}\n                alt=\"loading\"\n                className=\"profile-img\"\n                roundedCircle\n              />\n              <label>{fullName}</label>\n            </Link>\n            <Modal show={show} onHide={handleClose} animation={false}>\n              <Modal.Body>\n                <div>\n                  <Image\n                    src={profilePicture}\n                    style={{ width: \"50%\", height: \"25%\" }}\n                    alt=\"loading\"\n                    className=\"\"\n                    roundedCircle\n                  />\n                </div>\n                <label>{fullName}</label>\n                <br />\n                <label className=\"tbl-key-color\">{userDetails.email}</label>\n                <hr />\n              </Modal.Body>\n              <Modal.Footer>\n                <NavLink to={routes.login} className=\"m-auto\">\n                  <Button variant=\"danger\">Sign Out</Button>\n                </NavLink>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        </Row>\n        <hr />\n        <Row className=\"main-content container mt-5\">\n          <div className=\"col-md-6 \">\n            <div className=\"todo-title\">ToDo</div>\n            <div className=\"card-todo\">\n              {yetToCompleteTodo.length ? (\n                yetToCompleteTodo.map(todo => {\n                  return (\n                    <div className=\"pl-3\">\n                      <input type=\"checkbox\"></input>\n                      <span className=\"pl-2\" style={{ fontWeight: \"bold\" }}>\n                        {todo.title}\n                      </span>\n                    </div>\n                  );\n                })\n              ) : (\n                <LoadingIndicator />\n              )}\n            </div>\n          </div>\n          <div className=\"col-md-5 \" id=\"disable-todo\" disabled={true}>\n            <div className=\"todo-completed-title\">\n              Completed{\" \"}\n              <span>\n                <FontAwesomeIcon icon={faCheckCircle} />\n              </span>\n            </div>\n\n            <div className=\"card-todo-completed\">\n              {completedTodo.length ? (\n                completedTodo.map(todo => {\n                  return (\n                    <div className=\"pl-3\">\n                      <input\n                        type=\"checkbox\"\n                        defaultChecked={true}\n                        className=\"checked-todo\"\n                        disabled\n                      ></input>\n                      <span className=\"pl-2 color-text-grey\">{todo.title}</span>\n                    </div>\n                  );\n                })\n              ) : (\n                <LoadingIndicator />\n              )}\n            </div>\n          </div>\n        </Row>\n      </div>\n    </>\n  );\n};\n\nexport default Todo;\n","import React, { Component } from \"react\";\nimport ProfileSideBar from \"../../Components/ProfileSideBar\";\nimport Todo from \"../../Components/Todo\";\n\nclass TodoPage extends Component {\n  state = {};\n  render() {\n    const {\n      userDetails,\n      userTodo,\n      completedTodo,\n      yetToCompleteTodo,\n      userProfileUrl\n    } = this.props;\n    debugger;\n\n    return (\n      <div className=\"row\">\n        <ProfileSideBar fullName={userDetails.name} />\n        <Todo\n          fullName={userDetails.name}\n          profilePicture={userDetails.profilepicture}\n          userDetails={userDetails}\n          completedTodo={completedTodo}\n          yetToCompleteTodo={yetToCompleteTodo}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TodoPage;\n","import React, { useState } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { Card, Row, Image, CardDeck, Modal, Button } from \"react-bootstrap\";\nimport routes from \"../routes/routes\";\nimport LoadingIndicator from \"./LoadingIndicator\";\n\nconst Photos = ({\n  userAlbumPhotosById,\n  profilePicture,\n  fullName,\n  selectedAlbumTitle,\n  userEmail\n}) => {\n  debugger;\n  /* useState used to manage the state in functional components */\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <div className=\"col-md-10\">\n      <Row className=\"topbar container\">\n        <div className=\"sidebar-title\">Gallery</div>\n        <div className=\"profile-icon\">\n          <Link className=\"user-account-list\" onClick={handleShow}>\n            <Image\n              src={profilePicture}\n              alt=\"loading\"\n              className=\"profile-img\"\n              roundedCircle\n            />\n            <label>{fullName}</label>\n          </Link>\n          <Modal show={show} onHide={handleClose} animation={false}>\n            <Modal.Body>\n              <div>\n                <Image\n                  src={profilePicture}\n                  style={{ width: \"50%\", height: \"25%\" }}\n                  alt=\"loading\"\n                  className=\"\"\n                  roundedCircle\n                />\n              </div>\n              <label>{fullName}</label>\n              <br />\n              <label className=\"tbl-key-color\">{userEmail}</label>\n              <hr />\n            </Modal.Body>\n            <Modal.Footer>\n              <NavLink to={routes.login} className=\"m-auto\">\n                <Button variant=\"danger\">Sign Out</Button>\n              </NavLink>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </Row>\n      <hr />\n      <label className=\"album-header\">\n        <NavLink to={routes.gallery} className=\"photos-breadcrumb\">\n          Albums\n        </NavLink>{\" \"}\n        > {selectedAlbumTitle}\n      </label>\n      <Row className=\"main-content container\">\n        <div className=\"ml-3 row col-md-12\">\n          {userAlbumPhotosById.length ? (\n            userAlbumPhotosById.map(photo => {\n              debugger;\n              return (\n                <Card className=\"mb-3 col-md-3 photo-grid\">\n                  <Card.Img\n                    src={photo.url}\n                    height=\"200px\"\n                    width=\"250px!important\"\n                  ></Card.Img>\n                </Card>\n              );\n            })\n          ) : (\n            <LoadingIndicator />\n          )}\n        </div>\n      </Row>\n    </div>\n  );\n};\n\nexport default Photos;\n","/* Importing the required packages and components */\nimport React, { Component } from \"react\";\nimport ProfileSideBar from \"../../Components/ProfileSideBar\";\nimport LoadingIndicator from \"../../Components/LoadingIndicator\";\nimport Photos from \"../../Components/Photos\";\n\nclass PhotosPage extends Component {\n  state = {\n    selectedAlbumId: \"\",\n    userAlbumPhotosById: []\n  };\n  /* function triggered while mounting */\n  componentDidMount() {\n    const { match = {} } = this.props;\n    debugger;\n    const { params = {} } = match;\n    const { albumId: selectedAlbumId = \"\" } = params;\n    this.setState({ selectedAlbumId: selectedAlbumId });\n    debugger;\n    this.loadUserPhotos(selectedAlbumId);\n  }\n  /* function which get the photos of selected album by the user.  */\n  loadUserPhotos = id => {\n    try {\n      debugger;\n      const { userPhotos } = this.props;\n      const filteredUserPhotos = userPhotos.filter(album => {\n        return album.albumId === parseInt(id);\n      });\n      this.setState({ userAlbumPhotosById: filteredUserPhotos });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  render() {\n    /* destructuring the state and props */\n    const { userAlbumPhotosById } = this.state;\n    const { userDetails, selectedAlbumTitle } = this.props;\n    return (\n      <div className=\"row\">\n        {userAlbumPhotosById.length ? (\n          <>\n            <ProfileSideBar fullName={userDetails.name} />\n            <Photos\n              userAlbumPhotosById={userAlbumPhotosById}\n              fullName={userDetails.name}\n              profilePicture={userDetails.profilepicture}\n              selectedAlbumTitle={selectedAlbumTitle}\n              userEmail={userDetails.email}\n            />\n          </>\n        ) : (\n          <LoadingIndicator />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PhotosPage;\n","/* Importing the required packages and components */\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport fetchData from \"./Services/fetchData\";\nimport {\n  GET_USERS_API,\n  GET_POSTS_API,\n  GET_COMMENTS_API,\n  GET_ALBUMS_API,\n  GET_ACTIVITIES_API,\n  GET_TODO_API,\n  GET_PHOTOS_API\n} from \"./Constants/ServerUrls\";\nimport Login from \"./Pages/LoginPage/Login\";\nimport routes from \"./routes/routes\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport ProfileDetails from \"./Pages/ProfileDetails/ProfileDetails\";\nimport PostPage from \"./Pages/ProfileDetails/PostPage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport GalleryPage from \"./Pages/ProfileDetails/GalleryPage\";\nimport TodoPage from \"./Pages/ProfileDetails/TodoPage\";\nimport PhotosPage from \"./Pages/ProfileDetails/PhotosPage\";\n\nclass App extends Component {\n  /* Intializing the state variable */\n  state = {\n    usersList: [],\n    userProfileName: \"\",\n    userDetails: {},\n    userPost: [],\n    postComments: [],\n    userAlbums: [],\n    userActivity: [],\n    sortedActivity: [],\n    todayActivity: [],\n    yesterdayActivity: [],\n    earlierActivity: [],\n    userTodo: [],\n    completedTodo: [],\n    yetToCompleteTodo: [],\n    userProfileUrl: \"\",\n    userPhotos: [],\n    selectedAlbumTitle: \"\"\n  };\n\n  /* function triggered while mounting */\n  componentDidMount() {\n    const { history, location } = this.props;\n    debugger;\n    if (location.pathname === \"/Employees-Profile-React-App/\") {\n      history.push(routes.login);\n    } else {\n      let userDetails = JSON.parse(localStorage.getItem(\"liveUserDetails\"));\n      debugger;\n      this.loadUserPost(userDetails.id);\n      this.loadPostComments(userDetails.id);\n      this.loadActivities(userDetails.id);\n      this.loadAlbums(userDetails.id);\n      this.loadTodo(userDetails.id);\n      this.setState({\n        userDetails\n      });\n    }\n\n    this.loadUserAccountList();\n  }\n\n  /* async function used to fetch the users list */\n  loadUserAccountList = async () => {\n    try {\n      const getUsers = await fetchData(GET_USERS_API, \"GET\");\n      const usersList = getUsers.users;\n      /* set the value of state variable */\n      this.setState({ usersList });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  /* async function used to fetch the users post */\n  loadUserPost = async id => {\n    try {\n      const getPost = await fetchData(GET_POSTS_API, \"GET\");\n      const userPosts = getPost.posts;\n      let filteredPost = userPosts.filter(post => post.userId === id);\n      debugger;\n      this.setState({ userPost: filteredPost });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  /* async function used to fetch the post comments */\n  loadPostComments = async id => {\n    try {\n      const getComments = await fetchData(GET_COMMENTS_API, \"GET\");\n      const postComments = getComments.comments;\n      let filteredComments = postComments.filter(\n        comment => comment.userId === id\n      );\n      debugger;\n      this.setState({ postComments: filteredComments });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  /* async function used to fetch the albums */\n  loadAlbums = async id => {\n    try {\n      const getAlbums = await fetchData(GET_ALBUMS_API, \"GET\");\n      const userAlbums = getAlbums.album;\n      const getPhotos = await fetchData(GET_PHOTOS_API, \"GET\");\n      const userPhotos = getPhotos.albums;\n      const filteredUserPhotos = userPhotos.filter(album => {\n        return album.userId === id;\n      });\n      this.setState({ userAlbums, userPhotos: filteredUserPhotos });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  /* async function used to fetch the activities */\n  loadActivities = async id => {\n    try {\n      const getActivities = await fetchData(GET_ACTIVITIES_API, \"GET\");\n      const recentActivity = getActivities.recentActivity;\n      let filteredActivity = recentActivity.filter(\n        activity => activity.userId === id\n      );\n      debugger;\n      let formatActivity = filteredActivity.map(activity => {\n        activity.time = activity.time.replace(/-/g, \"/\").replace(\":\", \" \");\n        return activity;\n      });\n\n      /* sort the activities by date time */\n      let sortedActivity = formatActivity.sort(function(first, second) {\n        let c = new Date(first.time);\n        let d = new Date(second.time);\n        return d.getTime() - c.getTime();\n      });\n\n      /* extract/filter the yesterday activity alone */\n      let yesterdayActivity = sortedActivity.filter(activity => {\n        let activityDate = new Date(sortedActivity.time).toLocaleDateString();\n        let currentDate = new Date().toLocaleDateString();\n        const diffTime = Math.abs(currentDate - activityDate);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays === 1;\n      });\n\n      /* extract/filter the recent i.e today activity alone */\n      let todayActivity = sortedActivity.filter(activity => {\n        let activityDate = new Date(sortedActivity.time).toLocaleDateString();\n        let currentDate = new Date().toLocaleDateString();\n        return activityDate === currentDate;\n      });\n\n      /* extract/filter the earlier activity alone */\n      let earlierActivity = sortedActivity.filter(activity => {\n        return (\n          activity.id != todayActivity.id && activity.id != yesterdayActivity.id\n        );\n      });\n\n      /* set the value of state variable */\n      this.setState({\n        userActivity: filteredActivity,\n        sortedActivity,\n        todayActivity,\n        yesterdayActivity,\n        earlierActivity\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  /* async function used to fetch the albums */\n  loadTodo = async id => {\n    try {\n      const completedTodo = [];\n      const yetToCompleteTodo = [];\n      const getTodo = await fetchData(GET_TODO_API, \"GET\");\n      const userTodo = getTodo.todo;\n      let filteredTodo = userTodo.filter(todo => todo.userId === id);\n      debugger;\n      filteredTodo.map(todo => {\n        if (todo.completed === false) {\n          yetToCompleteTodo.push(todo);\n        } else {\n          completedTodo.push(todo);\n        }\n      });\n      this.setState({ filteredTodo, yetToCompleteTodo, completedTodo });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  /* storefunction used to store required data through out the application */\n  storeUserName = userAllDetails => {\n    debugger;\n    const details = { ...userAllDetails };\n    localStorage.setItem(\"liveUserDetails\", JSON.stringify(details));\n    this.loadUserPost(details.id);\n    this.loadPostComments(details.id);\n    this.loadActivities(details.id);\n    this.loadAlbums(details.id);\n    this.loadTodo(details.id);\n    this.setState({\n      userProfileName: details.name,\n      userDetails: details,\n      userProfileUrl: details.profilepicture\n    });\n  };\n  storeAlbumName = value => {\n    debugger;\n    this.setState({\n      selectedAlbumTitle: value\n    });\n  };\n  render() {\n    /* de-structuring the required state variables */\n    const {\n      usersList,\n      userPost,\n      userDetails,\n      userAlbums,\n      userActivity,\n      todayActivity,\n      yesterdayActivity,\n      earlierActivity,\n      postComments,\n      userTodo,\n      completedTodo,\n      yetToCompleteTodo,\n      userProfileUrl,\n      userPhotos,\n      storeAlbumName,\n      selectedAlbumTitle\n    } = this.state;\n    return (\n      <div>\n        {/* Routing declarations */}\n        <Route\n          exact\n          path={routes.login}\n          render={() => (\n            <Login usersList={usersList} storeUserName={this.storeUserName} />\n          )}\n        />\n        <Route\n          exact\n          path={routes.profile}\n          render={props => (\n            <ProfileDetails\n              {...props}\n              userDetails={userDetails}\n              userProfileUrl={userProfileUrl}\n            />\n          )}\n        />\n        <Route\n          exact\n          path={routes.posts}\n          render={props => (\n            <PostPage\n              {...props}\n              userDetails={userDetails}\n              postComments={postComments}\n              userPost={userPost}\n              userActivity={userActivity}\n              todayActivity={todayActivity}\n              yesterdayActivity={yesterdayActivity}\n              earlierActivity={earlierActivity}\n              userProfileUrl={userProfileUrl}\n            />\n          )}\n        />\n        <Route\n          exact\n          path={routes.gallery}\n          render={props => (\n            <GalleryPage\n              {...props}\n              userDetails={userDetails}\n              userAlbums={userAlbums}\n              userProfileUrl={userProfileUrl}\n              userPhotos={userPhotos}\n              storeAlbumName={this.storeAlbumName}\n            />\n          )}\n        />\n        <Route\n          exact\n          path={routes.todo}\n          render={props => (\n            <TodoPage\n              {...props}\n              userDetails={userDetails}\n              userTodo={userTodo}\n              completedTodo={completedTodo}\n              yetToCompleteTodo={yetToCompleteTodo}\n              userProfileUrl={userProfileUrl}\n            />\n          )}\n        />\n        <Route\n          exact\n          path={routes.albums}\n          render={props => (\n            <PhotosPage\n              {...props}\n              userDetails={userDetails}\n              userPhotos={userPhotos}\n              selectedAlbumTitle={selectedAlbumTitle}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}